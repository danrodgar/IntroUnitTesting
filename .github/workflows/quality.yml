name: Quality

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Step 1 - Checkout main brach from GitHub
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Step 2 - Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      
      - name: Step 3 - Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Step 4 - Cache Maven package
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Step 5 - Build Maven projects
        run: |
          cd code/calculatorExample ; mvn -B package --file pom.xml
          cd ../complexNumber ; mvn -B package --file pom.xml
          cd ../CucumberTestExample ; mvn -B package --file pom.xml
          cd ../EasyMockExample ; mvn -B package --file pom.xml
          cd ../MavenExamples/AppEx0 ; mvn -B package --file pom.xml
          cd ../../MockitoATM ; mvn -B package --file pom.xml
          cd ../TDDExampleFactorial ; mvn -B package --file pom.xml

      - name: Step 6.1 - Build and analyze calculatorExample
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: cd code/calculatorExample ; mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar

      - name: Step 6.2 - Build and analyze complexNumber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: cd code/complexNumber ; mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar

      - name: Step 6.3 - Build and analyze CucumberTestExample
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: cd code/CucumberTestExample ; mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar

      - name: Step 6.4 - Build and analyze EasyMockExample
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: cd code/EasyMockExample ; mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar

      - name: Step 6.5 - Build and analyze MavenExamples
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: cd code/MavenExamples/AppEx0 ; mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar

      - name: Step 6.5 - Build and analyze MockitoATM
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: cd code/MockitoATM ; mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar

      - name: Step 6.6 - Build and analyze TDDExampleFactorial
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: cd code/TDDExampleFactorial ; mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar